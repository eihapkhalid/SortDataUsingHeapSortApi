// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SortDataUsingHeapSort.DataAccess.Data;

#nullable disable

namespace SortDataUsingHeapSort.DataAccess.Migrations
{
    [DbContext(typeof(HeapSortDbContext))]
    partial class HeapSortDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SortDataUsingHeapSort.Models.TbSensorDataSample", b =>
                {
                    b.Property<int>("SensorDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorDataId"));

                    b.Property<string>("SensorDataName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("SensorDataValue")
                        .HasColumnType("real");

                    b.HasKey("SensorDataId");

                    b.ToTable("TbSensorDataSamples");
                });
#pragma warning restore 612, 618
        }
    }
}
